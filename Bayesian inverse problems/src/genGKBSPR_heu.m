function [X, res, eta, iterstop, info] = genGKBSPR_heu(A, b, M, N, k, tol, reorth, rule)
    % genGKBSPR_heu uses the subspace regularization method to solve the 
    % general-form regularization problem
    %   min{||Ax-b||_{M^{-1}}^2 + lambda*||x||_{N^{-1}}^2}.
    % by projecting it as
    %    min_{x\in X_k} ||x||_{N^{-1}},  X_k = {x: min_{x\in S_k}} ||Ax-b||_{M^{-1}} },
    % where the solution subspace S_k=span(V_k) is generated by gen_GKB.
    % The early stopping rule is a heuristic criterion such as L-curve or GCV.
    %
    % Inputs:
    %   A: either (a) a full or sparse mxn matrix;
    %             (b) a matrix object that performs the matrix*vector operation
    %   b: right-hand side vector
    %   M: covaraince matrix of noise e, e~N(0,M), symmetric positive definite
    %   N: scaled covaraince matrix of prior x, x~N(0,\lambda^{-1}N), symmetric positive definite
    %   k: the maximum number of iterations 
    %   tol: stopping tolerance of pcg.m for solving M*sb = s
    %       if tol=0, then solve it directly 
    %   reorth: 
    %       0: no reorthogonalization
    %       1: full reorthogonaliation, MGS
    %       2: double reorthogonaliation, MGS
    %   rule: type of heuristic earlt stopping rule
    %      'Lcurve': L-curve method
    %      'GCV'   : GCV method
    %
    % Outputs: 
    %   X: store the first k regularized solutions
    %   res: strore residual norm of the first k regularized solution, ||Ax_k-b||_{M^{-1}}
    %   eta: stores the norm of regularization term, ||x_k||_{N^{-1}}
    %   iterstop: the early seopping iteration estimated by L-curve/GCV
    %   info: 
    %     1. for 'Lcurve': describes possible warnings of L-curve method. Any combination of zeros and ones 
    %       is possible. The warnings described above will also result in text warnings on the command line.
    %     2. for ''GCV": store the values of GCV function
    % 
    % Reference: [1]. Haibo Li, Subspace projection regularization for large-scale Bayesian
    %  inverse problems, preprint, 2023.
    % [2]. J. Chung and A. K. Saibaba. Generalized hybrid iterative methods for large-scale Bayesian
    %  inverse problems. SIAM J. Sci. Comput., 39(5):S24{S46, 2017.
    %
    % Haibo Li, Institute of Computing Technology, Chinese Academy of Sciences
    % 04, Sept, 2023.
    %

% Check for acceptable number of input arguments
if nargin < 8
    error('Not Enough Inputs')
end

[m, n] = sizem1(A); 
if n ~= size(N,1) || m~= size(b,1)
    error('The dimensions are not consistent')
end
  

fprintf('Start the genGKB-SPR iteration ==================================\n');

[bbeta, B, ~, Z, Zb] = gen_GKB(A, b, M, N, k, tol, reorth);

% Intialiazation
[~, n] = size(A);
X  = zeros(n, k);  
Xb = zeros(n, k);  % stores N^{-1}*x_k
res = zeros(k,1);   
eta = zeros(k,1); 

if strcmp(rule, 'GCV')
    info = zeros(k, 1);
end

fprintf('Start update procedure ++++++++++++++++++++++++++++\n');
w  = Z(:,1);
wb = Zb (:,1);  % N^{-1}*w
phi_bar = bbeta;
rho_bar = B(1,1);
x  = zeros(n, 1);
xb = zeros(n, 1);  % % N^{-1}*x

for l = 1:k
    % Construct and apply orthogonal transformation.
    rrho = sqrt(rho_bar^2 + B(l+1,l)^2);
    c = rho_bar/rrho;
    s =  B(l+1,l)/rrho;
    theta = s*B(l+1,l+1);
    rho_bar = -c*B(l+1,l+1);
    phi = c*phi_bar;
    phi_bar = s*phi_bar;

    % Update the solution.
    x = x + (phi/rrho)*w;
    w = Z(:,l+1) - (theta/rrho)*w;
    X(:,l) = x;
    res(l) = abs(phi_bar);  % residual norm
    xb = xb + (phi/rrho)*wb;
    wb = Zb(:,l+1) - (theta/rrho)*wb;

    % Compute ||x_k||_{N^{-1}}=sqrt(xb'*x)
    eta(l) = sqrt(xb' * x);
end

% Estimate early seopping iteration by L-curve
if strcmp(rule, 'Lcurve')
    figure;
    [iterstop, info] = Lcurve(res, eta, 1);
elseif strcmp(rule, 'GCV')
    for l = 1:k
        info(l) = res(l)^2 / (m-l)^2;
    end
    [~, iterstop] = min(info);
else
    % pass
end

end
    
    